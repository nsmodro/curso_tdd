package br.com.componente.src;

import java.util.ArrayList;
import java.util.List;

import br.com.componente.arquivo.Arquivo;

public class Armazenamento {
	
	private static final String nomeArquivo = "pontucao.txt";
	private Arquivo arquivo;
	
	public Armazenamento() {
		arquivo = new Arquivo(nomeArquivo);
	}

	/*public void armazenaNovoPonto(Usuario usuario, TipoPonto tipoPonto, int qtdePontos) {
		arquivoTxt = new Arquivo();
		
		try {
			arquivoTxt.criarArquivoEEscreve(nomeArquivoPontos, montaTexto(usuario, tipoPonto, qtdePontos));
			//int i = arquivoTxt.leArquivo(usuario, tipoPonto);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private String montaTexto(Usuario usuario, TipoPonto tipoPonto, int qtdePontos) {
		return "\nUser: " + usuario.getNomeUsuario() + "\nTipo Ponto : " + tipoPonto.getTipoPonto() + "\nQuantidade: " + qtdePontos;
	}

	public int getQtdePontos(Usuario usuario, TipoPonto tipoPonto) {		
		return arquivoTxt.leArquivo(nomeArquivoPontos,usuario, tipoPonto);
	}
*/
	public void armazena(Usuario usuario, TipoPonto tipoPonto, int qtdePontos) {
		arquivo.escreve(usuario.getNomeUsuario()+";"+tipoPonto.getTipoPonto()+";"+qtdePontos+";");
	}
	
	public void armazenaEmArquivoJaExistente(Usuario usuario, TipoPonto tipoPonto, int qtdePontos) {
		arquivo.escreveEmArquivoJaExistente(usuario.getNomeUsuario()+";"+tipoPonto.getTipoPonto()+";"+qtdePontos+";");
	}

	public String getUltimoArmazenado() {
		return arquivo.getTextoArquivo();
	}

	public int getPontos(Usuario usuario, TipoPonto tipoPonto) {
		int soma = 0;
		List<Object> list = new ArrayList<>();
		list.addAll(arquivo.getTextoArquivoEmLista());
		for (Object object : list) {
			String[] linha = (String[]) object;
			if (linha[0].equals(usuario.getNomeUsuario()) && linha[1].equals(tipoPonto.getTipoPonto())) {
				soma += new Integer(linha[2]).intValue();
			}
		}
		return soma;
	}

}
